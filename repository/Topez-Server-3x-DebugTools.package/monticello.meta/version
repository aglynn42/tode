(name 'Topez-Server-3x-DebugTools-dkh.35' message '28 run, 6 passes, 0 expected defects, 22 failures, 0 errors, 0 unexpected passes' id 'feffdb1a-34b0-405f-b09b-d7815933a27a' date '01/01/2017' time '14:31:41' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.34' message '26 run, 21 passes, 0 expected defects, 5 failures, 0 errors, 0 unexpected passes' id '813b1012-6f3b-4a04-822d-314c0228ecfe' date '12/31/2016' time '07:42:40' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.33' message 'support versions prior to 3.3 (TDTopazContext>>calculateSelectionRange)' id '9d074ca6-3c03-4e83-bb77-01d1773a9732' date '12/31/2016' time '06:29:23' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.32' message 'pare things down just a bit more: 15 run, 6 passes, 0 expected defects, 9 failures, 0 errors, 0 unexpected passes' id '0733c06d-6970-475b-aa39-4d12fd59f9fe' date '12/30/2016' time '18:01:53' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.31' message 'skinnied up TDTodeExpandedContext>>nestedArgsAndTempsInto:excluding: ... there might be more trimming to be done ... but I must move on to other tests and test cases ... functional is good.15 run, 4 passes, 0 expected defects, 11 failures, 0 errors, 0 unexpected passes  15 testsTDStackFrameNewTests>>#testExecBlockComplexTempsBaseNodeMapTDStackFrameNewTests>>#testExecBlockNestedBlockTempsAndArgsBaseNodeMapTDStackFrameNewTests>>#testExecBlockSimpleBaseNodeMapTDStackFrameNewTests>>#testExecBlockSimpleWithTempsBaseNodeMap' id 'a6214015-11c1-4f1e-9595-7d41651848da' date '12/30/2016' time '17:36:17' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.30' message 'checkpoint ... finally trapping the elusive c temp variable ... threw kitchen sink at problem in TDTodeExpandedContext>>nestedArgsAndTempsInto:excluding: ... now need to scale it back to minimum needed.' id '11ecba28-56c8-4bfb-8f08-28a9192fa947' date '12/30/2016' time '17:19:57' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.29' message 'breakthrough ... realized that in TDTodeExpandedContext>>nestedArgsAndTempsInto:excluding: the frame is the "homeContext" so just do the arg lookup in place ... turns out that i the live debugger I see the proper values, but in the debugger something is different and I don''t see the block with `c` in it:( ... need to be able to validate the frames in tests!!!' id '6f5157c2-8611-4e3c-a099-ce227850900c' date '12/30/2016' time '15:32:59' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.28' message 'picking up the homeMethod args and temps now ... working on trying to get intermediate blocks to no avail ... so far; rework tests get the ones passing that were passing before and port the rest of the TDStackFrameNewTests to use TDTodeExpandedContext ... ' id 'd8f51d18-5e6c-497c-b33f-538ad59178bd' date '12/30/2016' time '15:17:10' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.27' message 'checkpoint ... temps from home method are now incorporated into the temp/args list (TDTodeExpandedContext and TDThisExpandedContext are where the nested temp/arg work is going on), but not quite the level of functionality I want; added more tests; extended the debugger functionality for the TDRawStackFrame hierarchy supporting doits and method compilation; [ci skip]' id 'd1ca9644-81ee-4289-986c-f82e7f9c8deb' date '12/30/2016' time '13:02:46' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.26' message 'make another pass through tests, TDThisContext, and TDTodeContext ... simplify and update tests' id '6a4f2fef-1083-4e6c-be84-ff28f442dad2' date '12/30/2016' time '08:10:17' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.25' message 'a bit of cleanup ... get TDStackFrameTests passing again' id 'd8e86f8b-2617-45f0-b352-1ee2c8dcf6cf' date '12/30/2016' time '07:28:38' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.24' message 'rename TDTopazFrame to TDTopazContext; add TDTodeContext and TDThisContext ... TDTodeContext includes instance variables and a reference to TDThisContext which has all of the context information ...' id '2c782b1e-044f-4698-8367-53aa7021928d' date '12/30/2016' time '07:11:15' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.23' message 'rename TDTopezContext to TDTopazFrame' id '1ff28572-6b79-43a1-b25c-af61eb127267' date '12/30/2016' time '05:54:09' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.22' message 'taking a fresh approach to build stack frames ... TDRawStackFrame provides basic access the stack frame contents with very little interpretation ... there is enough protocol present so that a TDRawStackFrame can be used in a TDDebugger. but I''ve got no client element support ... this class may migrate to the base image. TDTopazContext emulates the frame information displayed in topaz' id 'f6304d21-074c-48b5-904c-55f3012c35ed' date '12/30/2016' time '05:53:02' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.21' message 'switch debugger to use TDStackNew and fix bug in TDStackFrameNew;TDDirectoryNodeClientListElementBuilder>>objectParents; create separate TDDirectoryNodeClientListElementBuilder>>parentsMenuActionSpec so that debugger context views can use it; include instance variables in debugger context view' id 'f1e2f72b-6efe-4e14-859a-6c34fb730a60' date '12/29/2016' time '17:14:52' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.20' message 'start work on new implementation for stack frames: outerContext for blocks, new synthetic field organization, inspectable frames;TDStackFrameTests are all failing ... for now; TDStackFrameContentsClientListElementBuilder improvements: self always first in list, `inspect` menu item to see the underlying stack frame object instead of frame presentation' id '945d8403-6c82-44b3-bff7-c1da6d371197' date '12/29/2016' time '13:14:50' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.19' message 'tode server-side support for using the gci-based step through as opposed to TDDebugger>>dbSetThruBreaksDuring: ...' id 'dabfcfbc-64ca-48cf-97c3-1f39549530ef' date '12/21/2016' time '15:34:59' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.18' message 'fix a missing return in TDStackFrame>>argOrTempNamed:' id '18f7cd09-a3ee-4754-867c-c7dc469813ab' date '11/23/2016' time '17:18:57' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.17' message 'make a pass and throw away the unused and ambiguous methods in TDStackFrame: frameSelf, receiver, homeFrame, homeFrameSelf; add a useful theSelf which answers the `self`rslot from frameContents of the `self` temp name; tighten up TDDebugger>>frameList' id 'f8d26c12-2a85-4a35-8b23-68429bb71367' date '11/23/2016' time '16:32:18' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.16' message 'simplify and rewrite tests for factory ' id '6f1c7199-117e-44c0-8fb3-c1be4e5df367' date '11/23/2016' time '12:25:13' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.15' message 'checkpoint ... fleshing out tests in TDStackFrameTests' id '903d6121-396d-4e5d-b932-41befa7f4923' date '11/23/2016' time '10:27:11' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.14' message 'checkpoint ... new approach to tests in TDStackFrameTests ... nothing facy for TDStackFrame ... pretty much honor the fields available from _frameContentsAt: and when you''ve got an execBlock receiver, use the additional information ...  ' id '275aa9c8-2237-4627-afc2-5a082dd5a996' date '11/22/2016' time '20:29:19' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.13' message 'fix up `self` logic in debugger and context inspector for blocks ... self represents the value of `self` in the block, whereas the `receiver` is the block itself; `self` in workspace generated for a block must use `self`, too' id '7ef59fa1-822c-4027-80ef-1f53272080c4' date '11/21/2016' time '15:20:29' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.12' message 'additional work for dealing with classes that are shared between the other username and the current session ... session methods get created if the class is editted without having username set ... as when you''ve browsed the classes directly' id 'c5de0664-1904-47ba-a201-76c1897c29eb' date '09/23/2016' time '14:08:01' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.11' message 'make arrangements to be able to add/remove methods to/from classes defined  in another users symbolList ... using remote sessions to do the compile and removal' id 'bc25d291-23ca-43bb-ab5c-0825556acae2' date '09/23/2016' time '10:54:41' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.10' message 'start work on getting source pane (later) and context inspector panes implemented' id '5d21b1c1-0502-45ed-b452-968d5f8ba707' date '09/09/2016' time '10:37:48' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.9' message 'tantalizingly close to opening debugger ...' id '0fc02b41-9373-400f-bb30-4bf98293c0d5' date '09/08/2016' time '14:29:06' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.8' message 'fix debugger sourceOffset calculation for 3.4 ... looks like it should be valid for 3.1.x as well? Start playing with remote debugging of GemStone sessions (3.3.x only)' id '54242586-b9ea-4c14-a9cc-c1528f69299e' date '09/07/2016' time '18:47:54' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.7' message 'fix bug in TDStackFrame>>calculateSelectionRange ... how long have you been lurking?' id '16765493-6a70-433b-bcb0-ddab03f86a83' date '05/18/2016' time '14:07:03' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.6' message 'checkpoint ... sent but not implmented' id '8fb81889-62cf-486b-89e4-2ee9f4d8654b' date '05/16/2016' time '17:00:43' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.5' message 'now that we''re honoring canDiscardEdits, need a way to clearUserEditFlag in code editors (used in debugger at the moment)' id '5fd3d3dd-f86c-478c-b105-8558b38d6d42' date '08/31/2015' time '17:13:35' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.4' message 'another hack for 3.3 ... this time GsProcess>>_stepPointForIp:level:isNative: is replaced by GsProcess>>_stepPointForIp:level:useNext:' id 'e7937105-3465-464f-adfc-ba31e835b761' date '05/20/2015' time '17:04:14' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.3' message 'a bit of a hack, but the method GsProcess>>_localStepPointStringAt: is gone in 3.3 replaced by GsProcess>>_stepPointStringAt: ... don''t want to have to create a 3.3 specific package for this one method ... there might be more changes in the debugger interface so I''ll wait until then ...' id '9feb9b7b-d90e-4fc0-bab7-966af35d19a0' date '05/13/2015' time '17:16:03' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.2' message '- working on fixing  disappearing comments for workspaces (comment   no statements)- adding RBWorkspaceNode as extenstion to RB AST...- clean up workspace code so that it''s possible for workspace to   correctly access temps and args for debugger context- debugger context browse class and browse full cleaned up' id '6df6a540-262d-4537-bbc1-ce6f391cb7d6' date '06/28/2014' time '15:58:15' author 'dkh' ancestors ((name 'Topez-Server-3x-DebugTools-dkh.1' message 'add Topez-Server-3x-DebugTools and Topez-Server-30x-DebugTools packages to properly handle the different methods needed for debugging in the different versions of GemStone 3.x' id '0dee217e-d165-48a3-a815-f84273df002c' date '05/24/2014' time '10:20:31' author 'dkh' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())